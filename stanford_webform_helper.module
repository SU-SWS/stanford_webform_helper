<?php

/**
 * @file
 * stanford_webform_helper.module
 */

use \phpseclib\Net\SFTP;

/**
 * Implements hook_menu().
 */
function stanford_webform_helper_menu() {
  $items = array();
  $items['node/%webform_menu/webform/ftp'] = array(
    'title' => 'SFTP Results',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stanford_webform_helper_sftp_form', 1),
    'access callback' => 'webform_node_update_access',
    'access arguments' => array(1),
    'file' => 'stanford_webform_helper.forms.inc',
    'weight' => 7,
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_node_delete().
 */
function stanford_webform_helper_node_delete($node) {
  $sftp = variable_get('stanford_webform_helper_sftp', array());
  if (isset($sftp[$node->nid])) {
    unset($sftp[$node->nid]);
    variable_set('stanford_webform_helper_sftp', $sftp);
  }
}

/**
 * Implements hook_webform_submission_insert().
 */
function stanford_webform_helper_webform_submission_insert($node, $submission) {
  $sftp = variable_get('stanford_webform_helper_sftp', array());
  if (!isset($sftp[$node->nid]) || !$sftp[$node->nid]['enabled']) {
    return;
  }

  $csv_data = array();
  $webform = $node->webform;
  foreach ($submission->data as $component_id => $value) {
    $form_key = $webform['components'][$component_id]['form_key'];
    $csv_data[$form_key] = implode('; ', $value);

    if ($webform['components'][$component_id]['type'] == 'file' && $value) {
      if ($file = file_load(reset($value))) {
        $csv_data[$form_key] = file_create_url($file->uri);
      }
    }
  }
  if (!array_filter($csv_data)) {
    return;
  }

  $filename = webform_replace_tokens($sftp[$node->nid]['filename'], $node, $submission);
  $file_path = "public://webform/$filename.csv";
  $file = fopen($file_path, 'w+');
  fputcsv($file, array_keys($csv_data));
  fputcsv($file, $csv_data);
  fclose($file);

  if (stanford_webform_helper_upload_file($file_path, $sftp[$node->nid], $node->nid)) {
    watchdog('stanford_webform_helper', 'Successfully uploaded csv to SFTP server on webform !nid', array('!nid' => $node->nid));
  }
  else {
    watchdog('stanford_webform_helper', 'Failed uploading csv to SFTP server on webform !nid', array('!nid' => $node->nid), WATCHDOG_ERROR);
  }
  file_unmanaged_delete($file_path);
}

/**
 * Implements hook_webform_submission_update().
 */
function stanford_webform_helper_webform_submission_update($node, $submission) {
  stanford_webform_helper_webform_submission_insert($node, $submission);
}

/**
 * Upload the given file to the configured SFTP server.
 *
 * @param string $file
 *   The local file to upload.
 * @param array $connection_info
 *   Keyed array of the username, password, etc for the SFTP connection.
 * @param int $nid
 *   The node id of the webform being used.
 *
 * @return bool
 *   If successful.
 */
function stanford_webform_helper_upload_file($file, array $connection_info, $nid) {
  $remote = basename($file);
  $dir = $connection_info['directory'];
  $remote_file = "$dir/$remote";

  $host = $connection_info['sftp'];
  $port = $connection_info['port'];
  $username = $connection_info['username'];
  $password = decrypt(serialize($connection_info['password']));

  if ($connection_info['ftp']) {
    // Establish connection.
    if ($ftp_conn = ftp_ssl_connect($host, $port, 30)) {
      ftp_pasv($ftp_conn, TRUE);
      if (ftp_login($ftp_conn, $username, $password)) {

        // Send the file.
        if (ftp_put($ftp_conn, $remote_file, drupal_realpath($file), FTP_ASCII)) {
          ftp_close($ftp_conn);
          return TRUE;
        }
      }
      else {
        watchdog('stanford_webform_helper', 'Login Failed. node: !nid', array('!nid' => $nid));
      }
      // Close the connection.
      ftp_close($ftp_conn);
    }
    else {
      watchdog('stanford_webform_helper', 'Unable to connect to %host. node: !nid', array(
        '%host' => $host,
        '!nid' => $nid,
      ));
    }
  }
  else {
    require_once 'vendor/autoload.php';

    // Establish connection.
    $sftp = new SFTP($host, $port);
    if ($sftp->login($username, $password)) {

      // Send the file.
      if ($sftp->put($remote_file, file_get_contents($file), NET_SFTP_LOCAL_FILE)) {
        return TRUE;
      }
    }
    else {
      watchdog('stanford_webform_helper', 'Login Failed. node: !nid', array('!nid' => $nid));
    }

  }

  return FALSE;
}
